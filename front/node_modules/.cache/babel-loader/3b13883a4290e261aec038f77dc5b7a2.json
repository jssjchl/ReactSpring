{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactSpring\\\\front\\\\src\\\\component\\\\user\\\\UserListComponent.jsx\";\nimport React, { Component } from \"react\";\nimport ApiService from \"../../ApiService\";\nimport Table from '@material-ui/core/Table';\nimport { Button, TableBody, TableCell, TableHead, TableRow, Typography } from \"@material-ui/core\";\nimport { Create, Delete } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserListComponent extends Component {\n  constructor(props) {\n    //component의 생성자 선언할 때 사용함\n    //props는 상위 컴포넌트에서 전달해주는 속성값, props를 이용해 초기 상태값을 만들 때 constructor가 유용\n    //생성자 내에서는 구독작업이나 외부API를 호출하면 안됌,\n    super(props); // 권고하는 방식의 생성자 구현, this.props는 생성자 내에서 정의되지 않아 버그 발생 가능성 생김\n\n    this.reloadUserList = () => {\n      //유저리스트 불러오기\n      ApiService.fetchUsers() //axios == api 통신 사용 프로토콜?\n      .then(res => {\n        this.setState({\n          users: res.data\n        });\n      }).catch(err => {\n        console.log(\"reloadUserList() Errors!\", err);\n      });\n    };\n\n    this.deleteUser = userID => {\n      //유저 삭제\n      ApiService.deleteUser(userID) //api통신을 통해 DB에 있는 유저 삭제\n      .then(res => {\n        this.setState({\n          message: 'User Deleted Successfully.'\n        });\n        this.setState({\n          users: this.state.users.filter(user => user.id !== userID) //filter 기능을 통해 state에 있는 user배열에서 삭제된 해당 유저 id를 제외하고 다시 배열에 노출\n\n        });\n      }).catch(err => {\n        console.log(\"deleteUser() Error!\", err);\n      });\n    };\n\n    this.editUser = ID => {\n      window.localStorage.setItem(\"userID\", ID); //browser의 localstorage를 사용해 해당 유저 id를 일시적으로 저장, route를 통해 EditUserComponent.jsx로 이동\n\n      this.props.history.push('/edit-user'); //route에서 /edit-user url로 이동하면 EditUserComponent.jsx 노출하도로 설정\n    };\n\n    this.addUser = () => {\n      window.localStorage.removeItem(\"userID\");\n      this.props.history.push('/add-user');\n    };\n\n    this.state = {\n      //생성자 내에서는 setState의 호출이 아닌 this.state를 통해 초기값을 할당해줘야함\n      //생성자는 this.state를 직접 할당할 수 있지만 다른 곳에선 this.setState()를 사용\n      users: [],\n      message: null\n    };\n  }\n\n  componentDidMount() {\n    //외부 API호출이 필요하면 사용함, 비동기통신, DOM 요소에 접근할 때\n    this.reloadUserList();\n  }\n\n  render() {\n    //컴포넌트를 정의할 때 무조건 사용해야한다.\n    //render함수 내부에서 setState를 호출하면 안됌 ==무한루프에 빠지게 함\n    //render함수 반환값은 속성값과 상태값만으로 결정되야함\n    //부수효과를 발생시키면 안됌 , 순수하게 렌더링만== 비동기 통신이안 쿠키사용 등\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        style: style,\n        children: \"UserList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.addUser,\n        children: \"AddUser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"FirstName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"LastName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: this.state.users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"user\",\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: user.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: user.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: user.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: user.salary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              onClick: () => this.editUser(user.id),\n              children: /*#__PURE__*/_jsxDEV(Create, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              onClick: () => this.deleteUser(user.id),\n              children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst style = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nexport default UserListComponent;","map":{"version":3,"sources":["D:/ReactSpring/front/src/component/user/UserListComponent.jsx"],"names":["React","Component","ApiService","Table","Button","TableBody","TableCell","TableHead","TableRow","Typography","Create","Delete","UserListComponent","constructor","props","reloadUserList","fetchUsers","then","res","setState","users","data","catch","err","console","log","deleteUser","userID","message","state","filter","user","id","editUser","ID","window","localStorage","setItem","history","push","addUser","removeItem","componentDidMount","render","style","map","firstName","lastName","username","age","salary","display","justifyContent"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport Table from '@material-ui/core/Table'\r\n\r\nimport {Button, TableBody, TableCell, TableHead, TableRow, Typography} from \"@material-ui/core\";\r\nimport {Create, Delete} from \"@material-ui/icons\";\r\n\r\nclass UserListComponent extends Component {\r\n    constructor(props) {\r\n        //component의 생성자 선언할 때 사용함\r\n        //props는 상위 컴포넌트에서 전달해주는 속성값, props를 이용해 초기 상태값을 만들 때 constructor가 유용\r\n        //생성자 내에서는 구독작업이나 외부API를 호출하면 안됌,\r\n        super(props); // 권고하는 방식의 생성자 구현, this.props는 생성자 내에서 정의되지 않아 버그 발생 가능성 생김\r\n\r\n        this.state = {\r\n            //생성자 내에서는 setState의 호출이 아닌 this.state를 통해 초기값을 할당해줘야함\r\n            //생성자는 this.state를 직접 할당할 수 있지만 다른 곳에선 this.setState()를 사용\r\n            users: [],\r\n            message: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //외부 API호출이 필요하면 사용함, 비동기통신, DOM 요소에 접근할 때\r\n        this.reloadUserList();\r\n    }\r\n\r\n    reloadUserList = () => {\r\n        //유저리스트 불러오기\r\n        ApiService.fetchUsers() //axios == api 통신 사용 프로토콜?\r\n            .then(res => {\r\n                this.setState({\r\n                    users: res.data\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"reloadUserList() Errors!\", err);\r\n            })\r\n    }\r\n\r\n    deleteUser = (userID) => {\r\n        //유저 삭제\r\n        ApiService.deleteUser(userID) //api통신을 통해 DB에 있는 유저 삭제\r\n            .then(res => {\r\n                this.setState({\r\n                    message: 'User Deleted Successfully.'\r\n                });\r\n                this.setState({\r\n                    users: this.state.users.filter(user => user.id !== userID)\r\n                    //filter 기능을 통해 state에 있는 user배열에서 삭제된 해당 유저 id를 제외하고 다시 배열에 노출\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(\"deleteUser() Error!\", err);\r\n            })\r\n    }\r\n    editUser = (ID) => {\r\n        window.localStorage.setItem(\"userID\", ID);\r\n        //browser의 localstorage를 사용해 해당 유저 id를 일시적으로 저장, route를 통해 EditUserComponent.jsx로 이동\r\n        this.props.history.push('/edit-user')\r\n        //route에서 /edit-user url로 이동하면 EditUserComponent.jsx 노출하도로 설정\r\n    };\r\n    addUser = () => {\r\n        window.localStorage.removeItem(\"userID\");\r\n        this.props.history.push('/add-user')\r\n    };\r\n\r\n    render() {\r\n        //컴포넌트를 정의할 때 무조건 사용해야한다.\r\n        //render함수 내부에서 setState를 호출하면 안됌 ==무한루프에 빠지게 함\r\n        //render함수 반환값은 속성값과 상태값만으로 결정되야함\r\n        //부수효과를 발생시키면 안됌 , 순수하게 렌더링만== 비동기 통신이안 쿠키사용 등\r\n        return (\r\n            <div>\r\n                <Typography variant={\"h2\"} style={style}>UserList</Typography>\r\n                <Button variant={\"contained\"} color={\"primary\"} onClick={this.addUser}>AddUser</Button>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>ID</TableCell>\r\n                            <TableCell>FirstName</TableCell>\r\n                            <TableCell align={\"right\"}>LastName</TableCell>\r\n                            <TableCell align={\"right\"}>Age</TableCell>\r\n                            <TableCell align={\"right\"}>Salary</TableCell>\r\n                            <TableCell align={\"right\"}>Edit</TableCell>\r\n                            <TableCell align={\"right\"}>Delete</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.state.users.map(user =>\r\n                            <TableRow key={user.id}>\r\n                                <TableCell component={\"th\"} scope={\"user\"}>{user.id}</TableCell>\r\n                                <TableCell align={\"right\"}>{user.firstName}</TableCell>\r\n                                <TableCell align={\"right\"}>{user.lastName}</TableCell>\r\n                                <TableCell align={\"right\"}>{user.username}</TableCell>\r\n                                <TableCell align={\"right\"}>{user.age}</TableCell>\r\n                                <TableCell align={\"right\"}>{user.salary}</TableCell>\r\n                                <TableCell align={\"right\"} onClick={() => this.editUser(user.id)}>\r\n                                    <Create/>\r\n                                </TableCell>\r\n                                <TableCell align={\"right\"} onClick={() => this.deleteUser(user.id)}>\r\n                                    <Delete/>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst style ={\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\nexport default UserListComponent;\r\n"]},"metadata":{},"sourceType":"module"}